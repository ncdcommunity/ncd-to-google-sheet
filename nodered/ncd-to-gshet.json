[{"id":"d4c91444f27bf2a7","type":"function","z":"59c81deb02af9798","name":"ncd to GSheet","func":"var newMAC = msg.data.addr;\nvar count = flow.get(\"countMAC\") || 0;\nvar oldMAC;\n//---------------------------------------------\nvar firstFlag = context.get(\"firstFlag\") || false;\nvar date = new Date(msg.data.received)\nconst object = msg.payload;\nvar header = [];\nvar data = [];\nvar n = 3;\nvar i = 3;\nvar item = 1;\nvar localFlag = true;\n\nheader[0] = \"Date\";\nheader[1] = \"battery\";\nheader[2] = \"battery percent\";\n\ndata[0] = date;\ndata[1] = msg.data.battery;\ndata[2] = msg.data.battery_percent;\n\nfor (let index = 0; index < count; index++) {\n    /* Acces to element i of array (MAC) */\n    oldMAC = flow.get(\"MAC[\" + index + \"]\");\n    /* Check with current MACs */ \n    if (oldMAC == newMAC) { \n        /* known device */\n        item = ++index;\n        localFlag = false;\n    }\n}\nif(localFlag)\n{\n    // if new MAC arrive\n    flow.set(\"MAC[\" + count + \"]\", newMAC);\n    item = ++count;\n    flow.set(\"countMAC\", count);\n}\n\nfor (let property in object) {\n    header[n++] = property;\n    data[i++] = object[property];\n}\nmsg = {};\n\n/* if it is first message of a new device */\nif( firstFlag == false || localFlag == true){\n    /* So send header to correspond Sheet'n' */\n    msg.payload = header;\n    msg.cells = \"Sheet\" + item;\n    context.set(\"firstFlag\", true);\n    node.status({fill:\"blue\",shape:\"ring\",text:\"Header\"});\n    return msg;\n}\n\nmsg.payload = data;\nmsg.cells = \"Sheet\" + item;\nnode.status({fill:\"green\",shape:\"ring\",text:\"Data\"});\nreturn msg;\n\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":3260,"wires":[[]],"icon":"node-red/db.svg"}]
